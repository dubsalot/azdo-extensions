name: Build & Publish AzDo Extension

# Just beginning to migrate my azure-pipelines.yml here

# This is a basic workflow to help you get started with Actions
env:
  PUBLISH_TOKEN: replaceme
  EXTENSION_VERSION: replacemedate
  EXTENSION_ID: pipelinesoverviewhub
  EXTENSION_NAME: dubsalot pipelines
  EXTENSION_ICON: logo.png
  EXTENSION_PIPELINE_ICON: pipeline-logo.png
  EXTENSION_HUBGROUP_ICON: logo-hub.png
  EXTENSION_PIPELINE_NAME: Pipeline Overview
  setPipelineVariables: replaceme
  BRANCH_NAME: replaceme
  NON_PROD_NAME: beta
  



# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  #push:
    #branches: [ main ]
  #pull_request:
    #branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  initializeVariables:
    runs-on: ubuntu-latest
    
    steps:
      - name: Set up variables to be used for the build and publish
        run: echo "EXTENSION_VERSION=$(date +"%Y.%m.%d")" >> $GITHUB_ENV
      - name: test to see if the variable was set
        run: echo ${{ env.EXTENSION_VERSION }}
       
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo -----------------------------
          echo $EXTENSION_PIPELINE_NAME
          echo $EXTENSION_VERSION
          echo -----------------------------
      - name: also test here
        run: echo ${{ jobs.initializeVariables.env.EXTENSION_VERSION }}


#give me some more whitespace
